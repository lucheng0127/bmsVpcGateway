/*
Generated by code-generator, do not edit it
*/
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/lucheng0127/bmsVpcGateway/pkg/apis/network/v1alpha1"
	networkv1alpha1 "github.com/lucheng0127/bmsVpcGateway/pkg/client/clientset/versioned/typed/network/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeVpcConnections implements VpcConnectionInterface
type fakeVpcConnections struct {
	*gentype.FakeClientWithList[*v1alpha1.VpcConnection, *v1alpha1.VpcConnectionList]
	Fake *FakeNetworkV1alpha1
}

func newFakeVpcConnections(fake *FakeNetworkV1alpha1) networkv1alpha1.VpcConnectionInterface {
	return &fakeVpcConnections{
		gentype.NewFakeClientWithList[*v1alpha1.VpcConnection, *v1alpha1.VpcConnectionList](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("vpcconnections"),
			v1alpha1.SchemeGroupVersion.WithKind("VpcConnection"),
			func() *v1alpha1.VpcConnection { return &v1alpha1.VpcConnection{} },
			func() *v1alpha1.VpcConnectionList { return &v1alpha1.VpcConnectionList{} },
			func(dst, src *v1alpha1.VpcConnectionList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.VpcConnectionList) []*v1alpha1.VpcConnection {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.VpcConnectionList, items []*v1alpha1.VpcConnection) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
